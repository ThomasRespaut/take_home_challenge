{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2024-11-19T14:11:46.257189Z", "invocation_id": "dace8485-0968-4765-8e70-9f8b13900660", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-19T14:11:43.659894Z", "completed_at": "2024-11-19T14:11:43.680312Z"}, {"name": "execute", "started_at": "2024-11-19T14:11:43.681349Z", "completed_at": "2024-11-19T14:11:44.884301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2328860759735107, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "takehomechallenge", "job_id": "a3f23f35-291e-437a-962b-2daa936f0209", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.take_home_challenge.avg_products_per_order", "compiled": true, "compiled_code": "-- Exercice 3 : Calculer le nombre moyen de produits par commande pour chaque mois de l'ann\u00e9e 2023.\r\n\r\nSELECT\r\n    EXTRACT(MONTH FROM date_date) AS month, -- Extraire le mois \u00e0 partir de la date et renommer la colonne en \"month\".\r\n    AVG(qty) AS avg_products_per_order -- Calculer la moyenne des quantit\u00e9s de produits par commande pour chaque mois.\r\nFROM\r\n    takehomechallenge.sales_recrutement.sales -- Table contenant les lignes de vente par produit.\r\nWHERE\r\n    EXTRACT(YEAR FROM date_date) = 2023 -- Filtrer uniquement les donn\u00e9es pour l'ann\u00e9e 2023.\r\nGROUP BY\r\n    month -- Grouper les r\u00e9sultats par mois pour calculer une moyenne distincte pour chaque mois.\r\nORDER BY\r\n    month -- Trier les r\u00e9sultats dans l'ordre croissant des mois.", "relation_name": "`takehomechallenge`.`orders_recrutement`.`avg_products_per_order`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-19T14:11:43.675892Z", "completed_at": "2024-11-19T14:11:43.693146Z"}, {"name": "execute", "started_at": "2024-11-19T14:11:43.713274Z", "completed_at": "2024-11-19T14:11:44.968855Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3146731853485107, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "takehomechallenge", "job_id": "362770ab-5812-46b5-90b3-43d9a190fd33", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.take_home_challenge.orders_2023", "compiled": true, "compiled_code": "-- Exercice 1 : Calculer le nombre total de commandes pass\u00e9es en 2023.\r\n\r\n-- Utilisation de la fonction COUNT(*) pour compter toutes les lignes dans la table \"orders\".\r\n-- Chaque ligne repr\u00e9sente une commande unique.\r\n\r\nSELECT\r\n    COUNT(*) AS total_orders_2023 -- Renommer le r\u00e9sultat sous le nom \"total_orders_2023\" pour indiquer le nombre total de commandes.\r\nFROM\r\n    takehomechallenge.orders_recrutement.orders -- Table contenant les donn\u00e9es des commandes.\r\nWHERE\r\n    EXTRACT(YEAR FROM date_date) = 2023 -- Filtrer uniquement les commandes dont la date se situe en 2023.", "relation_name": "`takehomechallenge`.`orders_recrutement`.`orders_2023`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-19T14:11:43.672817Z", "completed_at": "2024-11-19T14:11:43.680312Z"}, {"name": "execute", "started_at": "2024-11-19T14:11:43.710266Z", "completed_at": "2024-11-19T14:11:44.971009Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.3195929527282715, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "takehomechallenge", "job_id": "6581dbb5-1acd-4b5c-9749-97329960d17d", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.take_home_challenge.order_segmentation", "compiled": true, "compiled_code": "-- Exercice 5 : Segmentation des commandes\r\n-- Les commandes de 2023 sont class\u00e9es en 3 segments :\r\n-- - 'New' : Premi\u00e8re commande du client dans les 12 derniers mois.\r\n-- - 'Returning' : Entre la 2\u1d49 et la 4\u1d49 commande du client dans les 12 derniers mois.\r\n-- - 'VIP' : 5\u1d49 commande ou plus du client dans les 12 derniers mois.\r\n\r\nWITH order_counts AS (\r\n    SELECT\r\n        o.orders_id, -- Identifiant unique de la commande.\r\n        o.customers_id AS client_id, -- Identifiant du client ayant pass\u00e9 la commande.\r\n        o.date_date AS order_date, -- Date de la commande.\r\n        COUNT(*) OVER (\r\n            PARTITION BY o.customers_id -- Segmenter par client.\r\n            ORDER BY o.date_date -- Trier les commandes par date.\r\n            ROWS BETWEEN 12 PRECEDING AND CURRENT ROW -- Inclure les commandes des 12 derniers mois.\r\n        ) AS orders_in_last_12_months -- Compte le nombre total de commandes pass\u00e9es par le client dans les 12 derniers mois.\r\n    FROM\r\n        takehomechallenge.orders_recrutement.orders o -- Table des commandes.\r\n    WHERE\r\n        EXTRACT(YEAR FROM o.date_date) = 2023 -- Filtrer pour les commandes pass\u00e9es uniquement en 2023.\r\n)\r\nSELECT\r\n    o.orders_id, -- Identifiant de la commande.\r\n    o.client_id, -- Identifiant du client.\r\n    o.order_date, -- Date de la commande.\r\n    CASE\r\n        WHEN o.orders_in_last_12_months = 1 THEN 'New' -- Si c'est la premi\u00e8re commande dans les 12 derniers mois.\r\n        WHEN o.orders_in_last_12_months BETWEEN 2 AND 4 THEN 'Returning' -- Si c'est entre la 2\u1d49 et la 4\u1d49 commande.\r\n        WHEN o.orders_in_last_12_months >= 5 THEN 'VIP' -- Si c'est la 5\u1d49 commande ou plus.\r\n        ELSE 'Unknown' -- Par d\u00e9faut, si aucune des conditions ci-dessus n'est remplie.\r\n    END AS order_segment -- Segment de la commande (New, Returning, VIP, ou Unknown).\r\nFROM\r\n    order_counts o -- Sous-requ\u00eate contenant le comptage des commandes.\r\nORDER BY\r\n    o.order_date, -- Trier les r\u00e9sultats par date de commande pour une chronologie claire.\r\n    o.client_id; -- Trier \u00e9galement par identifiant de client pour regrouper les commandes par client.", "relation_name": "`takehomechallenge`.`orders_recrutement`.`order_segmentation`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-19T14:11:43.674542Z", "completed_at": "2024-11-19T14:11:43.710266Z"}, {"name": "execute", "started_at": "2024-11-19T14:11:43.715914Z", "completed_at": "2024-11-19T14:11:45.089545Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.4356231689453125, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "takehomechallenge", "job_id": "c588505f-91b8-4ae2-9175-75cecd1e69ca", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.take_home_challenge.orders_2022_2023_with_qty", "compiled": true, "compiled_code": "-- Exercice 4 : Cr\u00e9er une table avec une ligne par commande pour les ann\u00e9es 2022 et 2023,\r\n-- en ajoutant une colonne `qty_product` qui donne la quantit\u00e9 totale de produits par commande.\r\n\r\nSELECT\r\n    o.date_date AS order_date, -- Renommer la colonne `date_date` en `order_date` pour plus de clart\u00e9.\r\n    o.customers_id, -- Inclure l'identifiant du client associ\u00e9 \u00e0 la commande.\r\n    o.orders_id, -- Inclure l'identifiant unique de la commande.\r\n    o.CA_ht, -- Inclure le chiffre d'affaires hors taxes associ\u00e9 \u00e0 la commande.\r\n    SUM(s.qty) AS qty_product -- Calculer la quantit\u00e9 totale de produits pour chaque commande.\r\nFROM\r\n    takehomechallenge.orders_recrutement.orders o -- Table contenant les informations sur les commandes.\r\nJOIN\r\n    takehomechallenge.sales_recrutement.sales s -- Table contenant les d\u00e9tails des ventes par produit.\r\nON\r\n    o.customers_id = s.client_id -- Faire correspondre les clients entre les tables `orders` et `sales`.\r\n    AND o.orders_id = s.transaction_id -- Associer chaque commande \u00e0 ses produits via `orders_id` et `transaction_id`.\r\nWHERE\r\n    EXTRACT(YEAR FROM o.date_date) IN (2022, 2023) -- Filtrer les commandes des ann\u00e9es 2022 et 2023 uniquement.\r\nGROUP BY\r\n    o.date_date, -- Grouper par la date de commande.\r\n    o.customers_id, -- Grouper par l'identifiant du client.\r\n    o.orders_id, -- Grouper par l'identifiant de la commande.\r\n    o.CA_ht -- Grouper par le chiffre d'affaires hors taxes.\r\nORDER BY\r\n    o.date_date, -- Trier les r\u00e9sultats par date de commande pour un affichage chronologique.\r\n    o.orders_id; -- Trier \u00e9galement par l'identifiant de la commande pour un ordre coh\u00e9rent.", "relation_name": "`takehomechallenge`.`orders_recrutement`.`orders_2022_2023_with_qty`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-19T14:11:44.981435Z", "completed_at": "2024-11-19T14:11:44.986753Z"}, {"name": "execute", "started_at": "2024-11-19T14:11:44.990791Z", "completed_at": "2024-11-19T14:11:46.221981Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2426888942718506, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "takehomechallenge", "job_id": "a7ae7881-a28b-4455-a1b5-eae5bee1ee84", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.take_home_challenge.orders_2023_with_segmentation", "compiled": true, "compiled_code": "-- Exercice 6 : Cr\u00e9ation d'une table pour les commandes de 2023 avec segmentation\r\n-- Cette requ\u00eate cr\u00e9e une table contenant toutes les commandes de l'ann\u00e9e 2023,\r\n-- avec une colonne suppl\u00e9mentaire : `order_segmentation` qui attribue un segment \u00e0 chaque commande.\r\n\r\nWITH order_counts AS (\r\n    SELECT\r\n        o.orders_id, -- Identifiant unique de la commande.\r\n        o.customers_id AS client_id, -- Identifiant du client ayant pass\u00e9 la commande.\r\n        o.date_date AS order_date, -- Date de la commande.\r\n        o.CA_ht, -- Montant total hors taxes de la commande.\r\n        COUNT(*) OVER (\r\n            PARTITION BY o.customers_id -- Comptage des commandes par client.\r\n            ORDER BY o.date_date -- Trier les commandes par date.\r\n            ROWS BETWEEN 12 PRECEDING AND CURRENT ROW -- Inclure les commandes des 12 derniers mois.\r\n        ) AS orders_in_last_12_months -- Nombre total de commandes pass\u00e9es par le client dans les 12 derniers mois.\r\n    FROM\r\n        takehomechallenge.orders_recrutement.orders o -- Table des commandes.\r\n    WHERE\r\n        EXTRACT(YEAR FROM o.date_date) = 2023 -- Filtrer pour inclure uniquement les commandes pass\u00e9es en 2023.\r\n)\r\nSELECT\r\n    o.orders_id, -- Identifiant de la commande.\r\n    o.client_id, -- Identifiant du client.\r\n    o.order_date, -- Date de la commande.\r\n    o.CA_ht, -- Montant total hors taxes de la commande.\r\n    CASE\r\n        WHEN o.orders_in_last_12_months = 1 THEN 'New' -- Si c'est la premi\u00e8re commande dans les 12 derniers mois.\r\n        WHEN o.orders_in_last_12_months BETWEEN 2 AND 4 THEN 'Returning' -- Si c'est entre la 2\u1d49 et la 4\u1d49 commande.\r\n        WHEN o.orders_in_last_12_months >= 5 THEN 'VIP' -- Si c'est la 5\u1d49 commande ou plus.\r\n        ELSE 'Unknown' -- Par d\u00e9faut, si aucune des conditions ci-dessus n'est remplie.\r\n    END AS order_segmentation -- Segment de la commande (New, Returning, VIP, ou Unknown).\r\nFROM\r\n    order_counts o; -- Sous-requ\u00eate contenant les informations n\u00e9cessaires.", "relation_name": "`takehomechallenge`.`orders_recrutement`.`orders_2023_with_segmentation`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-19T14:11:44.984460Z", "completed_at": "2024-11-19T14:11:44.986753Z"}, {"name": "execute", "started_at": "2024-11-19T14:11:44.987768Z", "completed_at": "2024-11-19T14:11:46.238304Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2579784393310547, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "takehomechallenge", "job_id": "903748f4-48ac-4780-a9a5-391581ff2ffe", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.take_home_challenge.orders_by_month", "compiled": true, "compiled_code": "-- Exercice 2 : Calculer le nombre de commandes par mois en 2023.\r\n\r\n-- La fonction EXTRACT permet d'extraire le mois \u00e0 partir de la colonne date_date.\r\n-- La fonction COUNT(*) compte le nombre total de commandes pour chaque mois.\r\n\r\nSELECT\r\n    EXTRACT(MONTH FROM date_date) AS month, -- Extraire le mois \u00e0 partir de la date de chaque commande et renommer la colonne en \"month\".\r\n    COUNT(*) AS total_orders -- Compter le nombre total de commandes pour chaque mois et renommer la colonne en \"total_orders\".\r\nFROM\r\n    takehomechallenge.orders_recrutement.orders -- Table contenant les donn\u00e9es des commandes.\r\nWHERE\r\n    EXTRACT(YEAR FROM date_date) = 2023 -- Filtrer les commandes pour l'ann\u00e9e 2023 uniquement.\r\nGROUP BY\r\n    month -- Grouper les r\u00e9sultats par mois pour obtenir un total distinct de commandes pour chaque mois.\r\nORDER BY\r\n    month -- Trier les r\u00e9sultats dans l'ordre croissant des mois.", "relation_name": "`takehomechallenge`.`orders_recrutement`.`orders_by_month`"}], "elapsed_time": 3.608214855194092, "args": {"warn_error_options": {"include": [], "exclude": []}, "print": true, "require_explicit_package_overrides_for_builtin_materializations": true, "empty": false, "select": [], "version_check": true, "macro_debugging": false, "vars": {}, "favor_state": false, "static_parser": true, "log_file_max_bytes": 10485760, "log_level": "info", "project_dir": "C:\\Users\\thoma\\PycharmProjects\\Take-Home challenge", "partial_parse_file_diff": true, "show_resource_report": false, "which": "run", "full_refresh": true, "exclude": [], "log_path": "C:\\Users\\thoma\\PycharmProjects\\Take-Home challenge\\logs", "send_anonymous_usage_stats": true, "enable_legacy_logger": false, "profiles_dir": "C:\\Users\\thoma\\.dbt", "log_level_file": "debug", "use_colors": true, "introspect": true, "printer_width": 80, "partial_parse": true, "strict_mode": false, "defer": false, "require_resource_names_without_spaces": false, "source_freshness_run_project_hooks": false, "log_format": "default", "populate_cache": true, "quiet": false, "invocation_command": "dbt run --full-refresh", "indirect_selection": "eager", "write_json": true, "use_colors_file": true, "cache_selected_only": false, "log_format_file": "debug"}}